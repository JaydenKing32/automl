2020-09-25 03:04:18.152326: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudart64_101.dll
I0925 03:04:27.350752 25928 main.py:226] {'name': 'efficientdet-d0', 'act_type': 'swish', 'image_size': (512, 512), 'target_size': None, 'input_rand_hflip': True, 'jitter_min': 0.1, 'jitter_max': 2.0, 'autoaugment_policy': None, 'use_augmix': False, 'augmix_params': [3, -1, 1], 'sample_image': None, 'num_classes': 90, 'seg_num_classes': 3, 'heads': ['object_detection'], 'skip_crowd_during_training': True, 'label_map': None, 'max_instances_per_image': 100, 'regenerate_source_id': False, 'min_level': 3, 'max_level': 7, 'num_scales': 3, 'aspect_ratios': [1.0, 2.0, 0.5], 'anchor_scale': 4.0, 'is_training_bn': True, 'momentum': 0.9, 'optimizer': 'sgd', 'learning_rate': 0.08, 'lr_warmup_init': 0.008, 'lr_warmup_epoch': 1.0, 'first_lr_drop_epoch': 200.0, 'second_lr_drop_epoch': 250.0, 'poly_lr_power': 0.9, 'clip_gradients_norm': 10.0, 'num_epochs': 300, 'data_format': 'channels_last', 'label_smoothing': 0.0, 'alpha': 0.25, 'gamma': 1.5, 'delta': 0.1, 'box_loss_weight': 50.0, 'iou_loss_type': None, 'iou_loss_weight': 1.0, 'weight_decay': 4e-05, 'strategy': None, 'mixed_precision': False, 'box_class_repeats': 3, 'fpn_cell_repeats': 3, 'fpn_num_filters': 64, 'separable_conv': True, 'apply_bn_for_resampling': True, 'conv_after_downsample': False, 'conv_bn_act_pattern': False, 'drop_remainder': True, 'nms_configs': {'method': 'gaussian', 'iou_thresh': None, 'score_thresh': None, 'sigma': None, 'max_nms_inputs': 0, 'max_output_size': 100}, 'fpn_name': None, 'fpn_weight_method': None, 'fpn_config': None, 'survival_prob': None, 'img_summary_steps': None, 'lr_decay_method': 'cosine', 'moving_average_decay': 0.9998, 'ckpt_var_scope': None, 'skip_mismatch': True, 'backbone_name': 'efficientnet-b0', 'backbone_config': None, 'var_freeze_expr': None, 'use_keras_model': True, 'dataset_type': None, 'positives_momentum': None, 'gradient_checkpointing': False, 'gradient_checkpointing_list': ['Add'], 'nvgpu_logging': False, 'model_name': 'efficientdet-d0', 'iterations_per_loop': 100, 'model_dir': 'efficientdet-d0/', 'num_shards': 8, 'num_examples_per_epoch': 120000, 'backbone_ckpt': '', 'ckpt': None, 'val_json_file': 'data/annotations/instances_val2014.json', 'testdev_dir': None, 'mode': 'eval'}
INFO:tensorflow:Using config: {'_model_dir': 'efficientdet-d0/', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
I0925 03:04:27.701193 25928 estimator.py:191] Using config: {'_model_dir': 'efficientdet-d0/', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
INFO:tensorflow:Using config: {'_model_dir': 'efficientdet-d0/', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
I0925 03:04:27.706190 25928 estimator.py:191] Using config: {'_model_dir': 'efficientdet-d0/', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
INFO:tensorflow:Waiting for new checkpoint at efficientdet-d0/
I0925 03:04:27.706190 25928 checkpoint_utils.py:125] Waiting for new checkpoint at efficientdet-d0/
INFO:tensorflow:Found new checkpoint at efficientdet-d0/model
I0925 03:04:27.719573 25928 checkpoint_utils.py:134] Found new checkpoint at efficientdet-d0/model
I0925 03:04:27.719573 25928 main.py:306] Starting to evaluate.
2020-09-25 03:04:27.924376: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library nvcuda.dll
2020-09-25 03:04:27.952295: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1716] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 970 computeCapability: 5.2
coreClock: 1.342GHz coreCount: 13 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 211.48GiB/s
2020-09-25 03:04:27.952508: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudart64_101.dll
2020-09-25 03:04:28.001424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cublas64_10.dll
2020-09-25 03:04:28.032604: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cufft64_10.dll
2020-09-25 03:04:28.053929: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library curand64_10.dll
2020-09-25 03:04:28.087067: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusolver64_10.dll
2020-09-25 03:04:28.115012: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusparse64_10.dll
2020-09-25 03:04:28.117734: W tensorflow/stream_executor/platform/default/dso_loader.cc:59] Could not load dynamic library 'cudnn64_7.dll'; dlerror: cudnn64_7.dll not found
2020-09-25 03:04:28.117937: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1753] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
INFO:tensorflow:Calling model_fn.
I0925 03:04:28.422705 25928 estimator.py:1162] Calling model_fn.
I0925 03:04:28.427702 25928 utils.py:422] Adding image summary ('input_image', <tf.Tensor 'IteratorGetNext:0' shape=(1, 512, 512, 3) dtype=float32>)
I0925 03:04:28.442523 25928 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.2, data_format='channels_last', num_classes=1000, width_coefficient=1.0, depth_coefficient=1.0, depth_divisor=8, min_depth=None, survival_prob=0.0, relu_fn=functools.partial(<function activation_fn at 0x000001D389625A60>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None)
I0925 03:04:28.617463 25928 efficientdet_keras.py:682] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0925 03:04:28.617463 25928 efficientdet_keras.py:682] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0925 03:04:28.622462 25928 efficientdet_keras.py:682] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0925 03:04:28.622462 25928 efficientdet_keras.py:682] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0925 03:04:28.622462 25928 efficientdet_keras.py:682] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0925 03:04:28.622462 25928 efficientdet_keras.py:682] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0925 03:04:28.622462 25928 efficientdet_keras.py:682] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0925 03:04:28.627427 25928 efficientdet_keras.py:682] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0925 03:04:28.627427 25928 efficientdet_keras.py:682] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0925 03:04:28.627427 25928 efficientdet_keras.py:682] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0925 03:04:28.627427 25928 efficientdet_keras.py:682] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0925 03:04:28.627427 25928 efficientdet_keras.py:682] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0925 03:04:28.632432 25928 efficientdet_keras.py:682] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0925 03:04:28.632432 25928 efficientdet_keras.py:682] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0925 03:04:28.637422 25928 efficientdet_keras.py:682] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0925 03:04:28.637422 25928 efficientdet_keras.py:682] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0925 03:04:28.637422 25928 efficientdet_keras.py:682] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0925 03:04:28.637422 25928 efficientdet_keras.py:682] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0925 03:04:28.637422 25928 efficientdet_keras.py:682] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0925 03:04:28.637422 25928 efficientdet_keras.py:682] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0925 03:04:28.642419 25928 efficientdet_keras.py:682] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0925 03:04:28.642419 25928 efficientdet_keras.py:682] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0925 03:04:28.642419 25928 efficientdet_keras.py:682] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0925 03:04:28.642419 25928 efficientdet_keras.py:682] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0925 03:04:28.702407 25928 efficientnet_model.py:717] Built stem stem : (1, 256, 256, 32)
I0925 03:04:28.702407 25928 efficientnet_model.py:372] Block blocks_0 input shape: (1, 256, 256, 32)
I0925 03:04:28.722404 25928 efficientnet_model.py:391] DWConv shape: (1, 256, 256, 32)
I0925 03:04:28.742368 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 32)
I0925 03:04:28.757386 25928 efficientnet_model.py:412] Project shape: (1, 256, 256, 16)
I0925 03:04:28.757386 25928 efficientnet_model.py:372] Block blocks_1 input shape: (1, 256, 256, 16)
I0925 03:04:28.772351 25928 efficientnet_model.py:388] Expand shape: (1, 256, 256, 96)
I0925 03:04:28.792340 25928 efficientnet_model.py:391] DWConv shape: (1, 128, 128, 96)
I0925 03:04:28.807331 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 96)
I0925 03:04:28.822324 25928 efficientnet_model.py:412] Project shape: (1, 128, 128, 24)
I0925 03:04:28.822324 25928 efficientnet_model.py:372] Block blocks_2 input shape: (1, 128, 128, 24)
I0925 03:04:28.842342 25928 efficientnet_model.py:388] Expand shape: (1, 128, 128, 144)
I0925 03:04:28.857808 25928 efficientnet_model.py:391] DWConv shape: (1, 128, 128, 144)
I0925 03:04:28.874566 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 144)
I0925 03:04:28.889559 25928 efficientnet_model.py:412] Project shape: (1, 128, 128, 24)
I0925 03:04:28.889559 25928 efficientnet_model.py:372] Block blocks_3 input shape: (1, 128, 128, 24)
I0925 03:04:28.904546 25928 efficientnet_model.py:388] Expand shape: (1, 128, 128, 144)
I0925 03:04:28.924546 25928 efficientnet_model.py:391] DWConv shape: (1, 64, 64, 144)
I0925 03:04:28.939532 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 144)
I0925 03:04:28.989510 25928 efficientnet_model.py:412] Project shape: (1, 64, 64, 40)
I0925 03:04:28.989510 25928 efficientnet_model.py:372] Block blocks_4 input shape: (1, 64, 64, 40)
I0925 03:04:29.008588 25928 efficientnet_model.py:388] Expand shape: (1, 64, 64, 240)
I0925 03:04:29.025386 25928 efficientnet_model.py:391] DWConv shape: (1, 64, 64, 240)
I0925 03:04:29.040379 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 240)
I0925 03:04:29.055343 25928 efficientnet_model.py:412] Project shape: (1, 64, 64, 40)
I0925 03:04:29.055343 25928 efficientnet_model.py:372] Block blocks_5 input shape: (1, 64, 64, 40)
I0925 03:04:29.070355 25928 efficientnet_model.py:388] Expand shape: (1, 64, 64, 240)
I0925 03:04:29.090345 25928 efficientnet_model.py:391] DWConv shape: (1, 32, 32, 240)
I0925 03:04:29.105343 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 240)
I0925 03:04:29.120337 25928 efficientnet_model.py:412] Project shape: (1, 32, 32, 80)
I0925 03:04:29.120337 25928 efficientnet_model.py:372] Block blocks_6 input shape: (1, 32, 32, 80)
I0925 03:04:29.140322 25928 efficientnet_model.py:388] Expand shape: (1, 32, 32, 480)
I0925 03:04:29.155292 25928 efficientnet_model.py:391] DWConv shape: (1, 32, 32, 480)
I0925 03:04:29.170302 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 480)
I0925 03:04:29.185294 25928 efficientnet_model.py:412] Project shape: (1, 32, 32, 80)
I0925 03:04:29.185294 25928 efficientnet_model.py:372] Block blocks_7 input shape: (1, 32, 32, 80)
I0925 03:04:29.205285 25928 efficientnet_model.py:388] Expand shape: (1, 32, 32, 480)
I0925 03:04:29.220276 25928 efficientnet_model.py:391] DWConv shape: (1, 32, 32, 480)
I0925 03:04:29.240272 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 480)
I0925 03:04:29.255258 25928 efficientnet_model.py:412] Project shape: (1, 32, 32, 80)
I0925 03:04:29.255258 25928 efficientnet_model.py:372] Block blocks_8 input shape: (1, 32, 32, 80)
I0925 03:04:29.275246 25928 efficientnet_model.py:388] Expand shape: (1, 32, 32, 480)
I0925 03:04:29.290218 25928 efficientnet_model.py:391] DWConv shape: (1, 32, 32, 480)
I0925 03:04:29.310209 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 480)
I0925 03:04:29.325227 25928 efficientnet_model.py:412] Project shape: (1, 32, 32, 112)
I0925 03:04:29.325227 25928 efficientnet_model.py:372] Block blocks_9 input shape: (1, 32, 32, 112)
I0925 03:04:29.340223 25928 efficientnet_model.py:388] Expand shape: (1, 32, 32, 672)
I0925 03:04:29.355183 25928 efficientnet_model.py:391] DWConv shape: (1, 32, 32, 672)
I0925 03:04:29.375204 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 672)
I0925 03:04:29.390196 25928 efficientnet_model.py:412] Project shape: (1, 32, 32, 112)
I0925 03:04:29.390196 25928 efficientnet_model.py:372] Block blocks_10 input shape: (1, 32, 32, 112)
I0925 03:04:29.410182 25928 efficientnet_model.py:388] Expand shape: (1, 32, 32, 672)
I0925 03:04:29.425146 25928 efficientnet_model.py:391] DWConv shape: (1, 32, 32, 672)
I0925 03:04:29.445154 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 672)
I0925 03:04:29.462068 25928 efficientnet_model.py:412] Project shape: (1, 32, 32, 112)
I0925 03:04:29.462068 25928 efficientnet_model.py:372] Block blocks_11 input shape: (1, 32, 32, 112)
I0925 03:04:29.477040 25928 efficientnet_model.py:388] Expand shape: (1, 32, 32, 672)
I0925 03:04:29.497058 25928 efficientnet_model.py:391] DWConv shape: (1, 16, 16, 672)
I0925 03:04:29.512049 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 672)
I0925 03:04:29.532011 25928 efficientnet_model.py:412] Project shape: (1, 16, 16, 192)
I0925 03:04:29.532011 25928 efficientnet_model.py:372] Block blocks_12 input shape: (1, 16, 16, 192)
I0925 03:04:29.552000 25928 efficientnet_model.py:388] Expand shape: (1, 16, 16, 1152)
I0925 03:04:29.571990 25928 efficientnet_model.py:391] DWConv shape: (1, 16, 16, 1152)
I0925 03:04:29.591982 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 1152)
I0925 03:04:29.606999 25928 efficientnet_model.py:412] Project shape: (1, 16, 16, 192)
I0925 03:04:29.606999 25928 efficientnet_model.py:372] Block blocks_13 input shape: (1, 16, 16, 192)
I0925 03:04:29.626990 25928 efficientnet_model.py:388] Expand shape: (1, 16, 16, 1152)
I0925 03:04:29.646981 25928 efficientnet_model.py:391] DWConv shape: (1, 16, 16, 1152)
I0925 03:04:29.666939 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 1152)
I0925 03:04:29.681962 25928 efficientnet_model.py:412] Project shape: (1, 16, 16, 192)
I0925 03:04:29.681962 25928 efficientnet_model.py:372] Block blocks_14 input shape: (1, 16, 16, 192)
I0925 03:04:29.707481 25928 efficientnet_model.py:388] Expand shape: (1, 16, 16, 1152)
I0925 03:04:29.727440 25928 efficientnet_model.py:391] DWConv shape: (1, 16, 16, 1152)
I0925 03:04:29.747457 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 1152)
I0925 03:04:29.762422 25928 efficientnet_model.py:412] Project shape: (1, 16, 16, 192)
I0925 03:04:29.767419 25928 efficientnet_model.py:372] Block blocks_15 input shape: (1, 16, 16, 192)
I0925 03:04:29.787410 25928 efficientnet_model.py:388] Expand shape: (1, 16, 16, 1152)
I0925 03:04:29.807425 25928 efficientnet_model.py:391] DWConv shape: (1, 16, 16, 1152)
I0925 03:04:29.827418 25928 efficientnet_model.py:195] Built SE se : (1, 1, 1, 1152)
I0925 03:04:29.842382 25928 efficientnet_model.py:412] Project shape: (1, 16, 16, 320)
I0925 03:04:31.696392 25928 det_model_fn.py:76] LR schedule method: cosine
I0925 03:04:31.931293 25928 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0925 03:04:32.011251 25928 det_model_fn.py:521] Eval val with groudtruths data/annotations/instances_val2014.json.
I0925 03:04:32.041235 25928 det_model_fn.py:598] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0925 03:04:32.471006 25928 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2020-09-25T03:04:32Z
I0925 03:04:32.485998 25928 evaluation.py:255] Starting evaluation at 2020-09-25T03:04:32Z
INFO:tensorflow:Graph was finalized.
I0925 03:04:32.795806 25928 monitored_session.py:246] Graph was finalized.
2020-09-25 03:04:32.804544: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN)to use the following CPU instructions in performance-critical operations:  AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2020-09-25 03:04:32.824772: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x1d38f128560 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-09-25 03:04:32.825130: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2020-09-25 03:04:32.826175: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1716] Found device 0 with properties:
pciBusID: 0000:01:00.0 name: GeForce GTX 970 computeCapability: 5.2
coreClock: 1.342GHz coreCount: 13 deviceMemorySize: 4.00GiB deviceMemoryBandwidth: 211.48GiB/s
2020-09-25 03:04:32.827163: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cudart64_101.dll
2020-09-25 03:04:32.827731: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cublas64_10.dll
2020-09-25 03:04:32.828275: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cufft64_10.dll
2020-09-25 03:04:32.830767: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library curand64_10.dll
2020-09-25 03:04:32.831835: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusolver64_10.dll
2020-09-25 03:04:32.832632: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library cusparse64_10.dll
2020-09-25 03:04:32.835869: W tensorflow/stream_executor/platform/default/dso_loader.cc:59] Could not load dynamic library 'cudnn64_7.dll'; dlerror: cudnn64_7.dll not found
2020-09-25 03:04:32.836105: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1753] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2020-09-25 03:04:32.908390: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1257] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-09-25 03:04:32.908590: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1263]      0
2020-09-25 03:04:32.910693: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1276] 0:   N
2020-09-25 03:04:32.914085: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x1d392b60b20 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2020-09-25 03:04:32.914273: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): GeForce GTX 970, Compute Capability 5.2
INFO:tensorflow:Restoring parameters from efficientdet-d0/model
I0925 03:04:32.918298 25928 saver.py:1293] Restoring parameters from efficientdet-d0/model
INFO:tensorflow:Running local_init_op.
I0925 03:04:34.124142 25928 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0925 03:04:34.184113 25928 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [4050/40504]
I0925 03:23:29.673351 25928 evaluation.py:167] Evaluation [4050/40504]
INFO:tensorflow:Evaluation [8100/40504]
I0925 03:42:39.260606 25928 evaluation.py:167] Evaluation [8100/40504]
INFO:tensorflow:Evaluation [12150/40504]
I0925 04:02:14.893003 25928 evaluation.py:167] Evaluation [12150/40504]
INFO:tensorflow:Evaluation [16200/40504]
I0925 04:21:57.099385 25928 evaluation.py:167] Evaluation [16200/40504]
INFO:tensorflow:Evaluation [20250/40504]
I0925 04:41:55.741623 25928 evaluation.py:167] Evaluation [20250/40504]
INFO:tensorflow:Evaluation [24300/40504]
I0925 05:02:27.770703 25928 evaluation.py:167] Evaluation [24300/40504]
INFO:tensorflow:Evaluation [28350/40504]
I0925 05:25:12.001526 25928 evaluation.py:167] Evaluation [28350/40504]
INFO:tensorflow:Evaluation [32400/40504]
I0925 05:48:44.690032 25928 evaluation.py:167] Evaluation [32400/40504]
INFO:tensorflow:Evaluation [36450/40504]
I0925 06:12:44.436804 25928 evaluation.py:167] Evaluation [36450/40504]
INFO:tensorflow:Evaluation [40500/40504]
I0925 06:37:31.014633 25928 evaluation.py:167] Evaluation [40500/40504]
INFO:tensorflow:Evaluation [40504/40504]
I0925 06:37:32.514115 25928 evaluation.py:167] Evaluation [40504/40504]
loading annotations into memory...
Done (t=5.37s)
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(4050400, 7)
0/4050400
1000000/4050400
2000000/4050400
3000000/4050400
4000000/4050400
DONE (t=18.03s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=546.49s).
Accumulating evaluation results...
DONE (t=164.58s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.407
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.603
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.445
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.137
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.475
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.324
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.499
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.524
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.212
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.620
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.773
INFO:tensorflow:Inference Time : 13543.80289s
I0925 06:50:16.314405 25928 evaluation.py:273] Inference Time : 13543.80289s
INFO:tensorflow:Finished evaluation at 2020-09-25-06:50:16
I0925 06:50:16.335171 25928 evaluation.py:276] Finished evaluation at 2020-09-25-06:50:16
INFO:tensorflow:Saving dict for global step 0: AP = 0.40682277, AP50 = 0.60271704, AP75 = 0.44495088, APl = 0.63523567, APm = 0.47529674, APs = 0.13697526, ARl = 0.77265006, ARm = 0.6198002, ARmax1 = 0.323928, ARmax10 = 0.49910876, ARmax100 = 0.5237164, ARs = 0.21188116, box_loss = 0.0, cls_loss = 5.4922814, global_step = 0, loss = 5.5873466
I0925 06:50:16.362871 25928 estimator.py:2063] Saving dict for global step 0: AP = 0.40682277, AP50 = 0.60271704, AP75 = 0.44495088, APl = 0.63523567, APm = 0.47529674, APs = 0.13697526, ARl = 0.77265006, ARm = 0.6198002, ARmax1 = 0.323928, ARmax10 = 0.49910876, ARmax100 = 0.5237164, ARs = 0.21188116, box_loss = 0.0, cls_loss = 5.4922814, global_step = 0, loss = 5.5873466
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 0: efficientdet-d0/model
I0925 06:50:18.654607 25928 estimator.py:2124] Saving 'checkpoint_path' summary for global step 0: efficientdet-d0/model
I0925 06:50:18.738346 25928 main.py:313] efficientdet-d0/model has no global step info: stop!
